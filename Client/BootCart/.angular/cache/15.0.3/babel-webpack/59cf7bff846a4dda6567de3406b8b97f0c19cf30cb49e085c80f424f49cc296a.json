{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/vismaya.mg/Documents/GitHub/BootCart/Client/BootCart/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport JwtHelper from 'src/app/helpers/jwtHelper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router, JwtHelper) {\n    this.router = router;\n    this.JwtHelper = JwtHelper;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (yield _this.JwtHelper.isTokenExpired()) {\n        _this.router.navigate(['/auth/login']);\n      }\n      return true;\n    })();\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(JwtHelper));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,OAAOA,SAAS,MAAM,2BAA2B;;;AAOjD,OAAM,MAAOC,SAAS;EAElBC,YAAoBC,MAAc,EAAUH,SAAmB;IAA3C,WAAM,GAANG,MAAM;IAAkB,cAAS,GAATH,SAAS;EAAc;EAE7DI,WAAW;IAAA;IAAA;MACb,UAAU,KAAI,CAACJ,SAAS,CAACK,cAAc,EAAE,EAAE;QACvC,KAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;;MAEzC,OAAO,IAAI;IAAC;EAChB;;AATSL,SAAS;mBAATA,SAAS,sCAPfD,SAAS;AAAA;AAOHC,SAAS;SAATA,SAAS;EAAAM,SAATN,SAAS;EAAAO,YAFN;AAAM","names":["JwtHelper","AuthGuard","constructor","router","canActivate","isTokenExpired","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\vismaya.mg\\Documents\\GitHub\\BootCart\\Client\\BootCart\\src\\app\\helpers\\authGuard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport JwtHelper from 'src/app/helpers/jwtHelper';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router, private JwtHelper:JwtHelper) { }\r\n  \r\n   async  canActivate() {\r\n        if (await this.JwtHelper.isTokenExpired()) {\r\n            this.router.navigate(['/auth/login']);\r\n        }\r\n        return true;\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}