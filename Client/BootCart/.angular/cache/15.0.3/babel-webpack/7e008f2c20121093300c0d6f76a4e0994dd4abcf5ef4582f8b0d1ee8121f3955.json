{"ast":null,"code":"import { HttpEventType, HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"width\": a0\n  };\n};\nfunction UploadComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 1)(2, \"div\", 9)(3, \"div\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx_r0.uploadProgress + \"%\"));\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r0.uploadProgress);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.uploadProgress, \"%\");\n  }\n}\nfunction UploadComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 1);\n    i0.ɵɵelement(2, \"img\", 11);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.uploadUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class UploadComponent {\n  constructor(http) {\n    this.http = http;\n    this.working = false;\n    this.uploadFileLabel = 'Choose an image to upload';\n    this.uploadProgress = 0;\n    this.uploadUrl = \"\";\n  }\n  handleFileInput(files) {\n    if (files.length > 0) {\n      this.uploadFile = files.item(0);\n      this.uploadFileLabel = this.uploadFile?.name;\n    }\n  }\n  upload() {\n    if (!this.uploadFile) {\n      alert('Choose a file to upload first');\n      return;\n    }\n    const formData = new FormData();\n    formData.append(this.uploadFile.name, this.uploadFile);\n    const url = '';\n    const uploadReq = new HttpRequest('POST', url, formData, {\n      reportProgress: true\n    });\n    this.uploadUrl = 'https://localhost:7089/api/ProductMaster/UploadImage';\n    this.uploadProgress = 0;\n    this.working = true;\n    this.http.request(uploadReq).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        this.uploadProgress = Math.round(100 * event.loaded / event.total);\n      } else if (event.type === HttpEventType.Response) {\n        this.uploadUrl = event.body.url;\n      }\n    }, error => {\n      console.error(error);\n    }).add(() => {\n      this.working = false;\n    });\n  }\n}\nUploadComponent.ɵfac = function UploadComponent_Factory(t) {\n  return new (t || UploadComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nUploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UploadComponent,\n  selectors: [[\"app-upload\"]],\n  decls: 11,\n  vars: 5,\n  consts: [[1, \"row\", \"mt-5\"], [1, \"col\"], [1, \"custom-file\"], [\"type\", \"file\", \"accept\", \"image/*\", \"id\", \"customFile\", 1, \"custom-file-input\", 3, \"disabled\", \"change\"], [\"for\", \"customFile\", 1, \"custom-file-label\"], [1, \"col-auto\", \"pl-sm-0\"], [\"type\", \"button\", \"ngbTooltip\", \"Upload\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [\"class\", \"row mt-3\", 4, \"ngIf\"], [1, \"row\", \"mt-3\"], [1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", 3, \"ngStyle\"], [\"alt\", \"preview\", 1, \"rounded\", \"shadow\", \"w-100\", 3, \"src\"]],\n  template: function UploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"change\", function UploadComponent_Template_input_change_3_listener($event) {\n        return ctx.handleFileInput($event.target.files);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 4);\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function UploadComponent_Template_button_click_7_listener() {\n        return ctx.upload();\n      });\n      i0.ɵɵtext(8, \"Upload\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(9, UploadComponent_div_9_Template, 5, 5, \"div\", 7);\n      i0.ɵɵtemplate(10, UploadComponent_div_10_Template, 3, 1, \"div\", 7);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.working);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.uploadFileLabel);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.working);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.working);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.uploadUrl == null ? null : ctx.uploadUrl.length);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgStyle],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqBA,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;;;;;;;;;;;ICU3EC,8BAAsC;IAGuIA,YAAqB;IAAAA,iBAAM;;;;IAArJA,eAA6C;IAA7CA,iFAA6C;IAACA,sDAAqC;IAAuCA,eAAqB;IAArBA,qDAAqB;;;;;IAIlMA,8BAAgD;IAE5CA,0BAAkE;IACpEA,iBAAM;;;;IADCA,eAAiB;IAAjBA,wDAAiB;;;ADZ5B,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAExB,YAAO,GAAG,KAAK;IAEf,oBAAe,GAAuB,2BAA2B;IACjE,mBAAc,GAAU,CAAC;IACzB,cAAS,GAAU,EAAE;EANkB;EAQvCC,eAAe,CAACC,KAAe;IAC7B,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACpB,IAAI,CAACC,UAAU,GAAGF,KAAK,CAACG,IAAI,CAAC,CAAC,CAAC;MAC/B,IAAI,CAACC,eAAe,GAAG,IAAI,CAACF,UAAU,EAAEG,IAAI;;EAEhD;EAEAC,MAAM;IACJ,IAAI,CAAC,IAAI,CAACJ,UAAU,EAAE;MACpBK,KAAK,CAAC,+BAA+B,CAAC;MACtC;;IAGF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,IAAI,CAACR,UAAU,CAACG,IAAI,EAAE,IAAI,CAACH,UAAU,CAAC;IAEtD,MAAMS,GAAG,GAAG,EAAE;IACd,MAAMC,SAAS,GAAG,IAAIlB,WAAW,CAAC,MAAM,EAAEiB,GAAG,EAAEH,QAAQ,EAAE;MACvDK,cAAc,EAAE;KACjB,CAAC;IAEF,IAAI,CAACC,SAAS,GAAG,sDAAsD;IACvE,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,OAAO,GAAG,IAAI;IAEnB,IAAI,CAAClB,IAAI,CAACmB,OAAO,CAACL,SAAS,CAAC,CAACM,SAAS,CAAEC,KAAU,IAAI;MACpD,IAAIA,KAAK,CAACC,IAAI,KAAK3B,aAAa,CAAC4B,cAAc,EAAE;QAC/C,IAAI,CAACN,cAAc,GAAGO,IAAI,CAACC,KAAK,CAAE,GAAG,GAAGJ,KAAK,CAACK,MAAM,GAAIL,KAAK,CAACM,KAAK,CAAC;OACrE,MAAM,IAAIN,KAAK,CAACC,IAAI,KAAK3B,aAAa,CAACiC,QAAQ,EAAE;QAChD,IAAI,CAACZ,SAAS,GAAGK,KAAK,CAACQ,IAAI,CAAChB,GAAG;;IAEnC,CAAC,EAAGiB,KAAU,IAAI;MAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC,CAACE,GAAG,CAAC,MAAK;MACV,IAAI,CAACd,OAAO,GAAG,KAAK;IACtB,CAAC,CAAC;EACJ;;AA/CWpB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAmC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR5BxC,8BAAsB;MAGgEA;QAAA,OAAUyC,wCAA0C;MAAA,EAAC;MAAnIzC,iBAAyJ;MACzJA,gCAAkD;MAAAA,YAAqB;MAAAA,iBAAQ;MAGnFA,8BAA8B;MAC8CA;QAAA,OAASyC,YAAQ;MAAA,EAAC;MAAsBzC,sBAAM;MAAAA,iBAAS;MAGrIA,gEAMM;MACNA,kEAIM;;;MAnBoIA,eAAoB;MAApBA,sCAAoB;MACtGA,eAAqB;MAArBA,yCAAqB;MAIoBA,eAAoB;MAApBA,sCAAoB;MAG9FA,eAAa;MAAbA,kCAAa;MAObA,eAAuB;MAAvBA,0EAAuB","names":["HttpEventType","HttpRequest","i0","UploadComponent","constructor","http","handleFileInput","files","length","uploadFile","item","uploadFileLabel","name","upload","alert","formData","FormData","append","url","uploadReq","reportProgress","uploadUrl","uploadProgress","working","request","subscribe","event","type","UploadProgress","Math","round","loaded","total","Response","body","error","console","add","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\vismaya.mg\\Documents\\GitHub\\BootCart\\Client\\BootCart\\src\\app\\upload\\upload.component.ts","C:\\Users\\vismaya.mg\\Documents\\GitHub\\BootCart\\Client\\BootCart\\src\\app\\upload\\upload.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient, HttpEventType, HttpRequest } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent {\r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  working = false;\r\n  uploadFile: File | null | undefined;\r\n  uploadFileLabel: string | undefined = 'Choose an image to upload';\r\n  uploadProgress: number =0;\r\n  uploadUrl: string =\"\";\r\n\r\n  handleFileInput(files: FileList) {\r\n    if (files.length > 0) {\r\n      this.uploadFile = files.item(0);\r\n      this.uploadFileLabel = this.uploadFile?.name;\r\n    }\r\n  }\r\n\r\n  upload() {\r\n    if (!this.uploadFile) {\r\n      alert('Choose a file to upload first');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(this.uploadFile.name, this.uploadFile);\r\n\r\n    const url = '';\r\n    const uploadReq = new HttpRequest('POST', url, formData, {\r\n      reportProgress: true,\r\n    });\r\n\r\n    this.uploadUrl = 'https://localhost:7089/api/ProductMaster/UploadImage';\r\n    this.uploadProgress = 0;\r\n    this.working = true;\r\n\r\n    this.http.request(uploadReq).subscribe((event: any) => {\r\n      if (event.type === HttpEventType.UploadProgress) {\r\n        this.uploadProgress = Math.round((100 * event.loaded) / event.total);\r\n      } else if (event.type === HttpEventType.Response) {\r\n        this.uploadUrl = event.body.url;\r\n      }\r\n    }, (error: any) => {\r\n      console.error(error);\r\n    }).add(() => {\r\n      this.working = false;\r\n    });\r\n  }\r\n}","<div class=\"row mt-5\">\r\n    <div class=\"col\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" accept=\"image/*\" class=\"custom-file-input\" id=\"customFile\" (change)=\"handleFileInput($any($event.target).files)\" [disabled]=\"working\">\r\n        <label class=\"custom-file-label\" for=\"customFile\">{{ uploadFileLabel }}</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-auto pl-sm-0\">\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" ngbTooltip=\"Upload\" (click)=\"upload()\" [disabled]=\"working\">Upload</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-3\" *ngIf=\"working\">\r\n    <div class=\"col\">\r\n      <div class=\"progress\">\r\n        <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploadProgress + '%' }\" [attr.aria-valuenow]=\"uploadProgress\" aria-valuemin=\"0\" aria-valuemax=\"100\">{{ uploadProgress }}%</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-3\" *ngIf=\"uploadUrl?.length\">\r\n    <div class=\"col\">\r\n      <img [src]=\"uploadUrl\" alt=\"preview\" class=\"rounded shadow w-100\">\r\n    </div>\r\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}