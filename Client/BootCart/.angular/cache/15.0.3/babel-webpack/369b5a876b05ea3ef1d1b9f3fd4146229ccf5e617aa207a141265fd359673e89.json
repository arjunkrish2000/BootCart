{"ast":null,"code":"export class JwtInterceptor {\n  intercept(req, next) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      let req1 = req.clone({\n        setHeaders: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return next.handle(req1);\n    }\n    return next.handle(req);\n  }\n}","map":{"version":3,"mappings":"AAGA,OAAM,MAAOA,cAAc;EACvBC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAGF,KAAK,EAAC;MACL,IAAIG,IAAI,GAAGL,GAAG,CAACM,KAAK,CAAC;QACjBC,UAAU,EAAE;UACR,eAAe,EAAE,UAAUL,KAAK;;OAEvC,CAAC;MACF,OAAOD,IAAI,CAACO,MAAM,CAACH,IAAI,CAAC;;IAE5B,OAAOJ,IAAI,CAACO,MAAM,CAACR,GAAG,CAAC;EAC3B","names":["JwtInterceptor","intercept","req","next","token","localStorage","getItem","req1","clone","setHeaders","handle"],"sourceRoot":"","sources":["C:\\Users\\arjun.jg\\Documents\\GitHub\\BootCart\\Client\\BootCart\\src\\app\\helpers\\interceptors\\jwtInterceptor.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class JwtInterceptor implements HttpInterceptor{\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token = localStorage.getItem('token');\r\n        if(token){\r\n            let req1 = req.clone({\r\n                setHeaders: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            });\r\n            return next.handle(req1);\r\n        }\r\n        return next.handle(req);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}