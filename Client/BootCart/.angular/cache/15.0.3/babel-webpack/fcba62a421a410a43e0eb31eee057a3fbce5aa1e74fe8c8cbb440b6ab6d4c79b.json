{"ast":null,"code":"import jwt_decode from \"jwt-decode\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-cookie-service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, LoginComponent_div_14_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, LoginComponent_div_14_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(13);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_20_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be less than 25 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtemplate(1, LoginComponent_div_20_div_1_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(2, LoginComponent_div_20_div_2_Template, 2, 0, \"div\", 23);\n    i0.ɵɵtemplate(3, LoginComponent_div_20_div_3_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(19);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"maxlength\"]);\n  }\n}\nfunction LoginComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.message, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(loginService, router, cookieService) {\n    this.loginService = loginService;\n    this.router = router;\n    this.cookieService = cookieService;\n    this.message = '';\n  }\n  checkLogin(form) {\n    this.loginService.login(form.value).subscribe({\n      next: res => {\n        if (res.success) {\n          localStorage.setItem('token', res.data);\n          var decodedToken = jwt_decode(res.data);\n          console.log(decodedToken.UserId);\n          console.log(decodedToken);\n          this.cookieService.set('userid', decodedToken.UserId);\n          console.log(this.cookieService.get('userid'));\n          switch (decodedToken.Role) {\n            case \"Admin\":\n              this.router.navigate([\"/admin\"]);\n              break;\n            case \"Customer\":\n              this.router.navigate([\"/customer\"]);\n              break;\n            case \"ProductMaster\":\n              this.router.navigate([\"/productmaster\"]);\n          }\n        }\n      },\n      error: err => {\n        this.message = err.error.message;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.CookieService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 31,\n  vars: 4,\n  consts: [[1, \"d-flex\"], [1, \"img1\"], [\"src\", \"assets/log.jpeg\", \"width\", \"500\", \"height\", \"600\", \"alt\", \"Sample image\", 1, \"img-fluid\"], [1, \"box\"], [1, \"text-center\", 2, \"color\", \"#090f2e\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"col-sm-10\", \"offset-sm-1\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"ngModel\", \"\", \"placeholder\", \"me@example.com\", \"pattern\", \"^([\\\\w\\\\.\\\\-]+)@([\\\\w\\\\-]+)((\\\\.(\\\\w){2,3})+)$\", \"required\", \"\", 1, \"form-control\"], [\"email\", \"ngModel\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [1, \"col-sm-10\", \"offset-sm-1\", \"mt-1\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"ngModel\", \"\", \"placeholder\", \"Password\", \"minlength\", \"6\", \"maxlength\", \"25\", \"required\", \"\", 1, \"form-control\"], [\"password\", \"ngModel\"], [1, \"mt-4\", \"d-grid\", \"col-sm-10\", \"offset-sm-1\"], [\"type\", \"submit\", 1, \"btn\", 2, \"background-color\", \"#3680e0\", 3, \"disabled\"], [1, \"bg-light\", \"border-2\", \"border-top\"], [1, \"mt-2\", \"d-flex\", \"justify-content-end\"], [\"routerLink\", \"/auth/register\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [1, \"text-danger\", \"mt-2\"], [4, \"ngIf\"], [1, \"alert\", \"alert-info\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r11 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1);\n      i0.ɵɵelement(3, \"img\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"h1\", 4);\n      i0.ɵɵtext(6, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 5, 6);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n        i0.ɵɵrestoreView(_r11);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.checkLogin(_r0));\n      });\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9, 10);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 3, 2, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 12)(16, \"label\", 13);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 14, 15);\n      i0.ɵɵtemplate(20, LoginComponent_div_20_Template, 4, 3, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\", 16)(22, \"button\", 17);\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(24, \"hr\", 18);\n      i0.ɵɵelementStart(25, \"div\", 19)(26, \"span\");\n      i0.ɵɵtext(27, \"Don't have an account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"a\", 20);\n      i0.ɵɵtext(29, \" Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(30, LoginComponent_div_30_Template, 2, 1, \"div\", 21);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(8);\n      const _r1 = i0.ɵɵreference(13);\n      const _r3 = i0.ɵɵreference(19);\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors && _r1.touched);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", _r3.errors && _r3.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n    }\n  },\n  dependencies: [i4.NgIf, i2.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinLengthValidator, i5.MaxLengthValidator, i5.PatternValidator, i5.NgModel, i5.NgForm],\n  styles: [\".img1[_ngcontent-%COMP%]{\\r\\n    margin-top: 80px;\\r\\n    margin-left: 40px;\\r\\n}\\r\\n\\r\\n\\r\\n.box[_ngcontent-%COMP%]{\\r\\n    margin-top: 80px;\\r\\n   border-radius: 5px;\\r\\n    width: 520px;\\r\\n    height: 350px;\\r\\n  \\r\\n    background-color: rgb(176, 230, 242);\\r\\n   \\r\\n   \\r\\n  margin-left: 110px;\\r\\n  margin-bottom: 10px;\\r\\n  border: 1px ;\\r\\n  padding: 10px;\\r\\n  box-shadow: 2px 3px 5px #888888;\\r\\n}\\n/*# sourceURL=webpack://./src/app/auth/login/login.component.css */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixpQkFBaUI7QUFDckI7OztBQUdBO0lBQ0ksZ0JBQWdCO0dBQ2pCLGtCQUFrQjtJQUNqQixZQUFZO0lBQ1osYUFBYTs7SUFFYixvQ0FBb0M7OztFQUd0QyxrQkFBa0I7RUFDbEIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixhQUFhO0VBQ2IsK0JBQStCO0FBQ2pDIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5pbWcxe1xyXG4gICAgbWFyZ2luLXRvcDogODBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA0MHB4O1xyXG59XHJcblxyXG5cclxuLmJveHtcclxuICAgIG1hcmdpbi10b3A6IDgwcHg7XHJcbiAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHdpZHRoOiA1MjBweDtcclxuICAgIGhlaWdodDogMzUwcHg7XHJcbiAgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc2LCAyMzAsIDI0Mik7XHJcbiAgIFxyXG4gICBcclxuICBtYXJnaW4tbGVmdDogMTEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBib3JkZXI6IDFweCA7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3gtc2hhZG93OiAycHggM3B4IDVweCAjODg4ODg4O1xyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["jwt_decode","i0","LoginComponent","constructor","loginService","router","cookieService","checkLogin","form","login","value","subscribe","next","res","success","localStorage","setItem","data","decodedToken","console","log","UserId","set","get","Role","navigate","error","err","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\arjun.jg\\Documents\\GitHub\\BootCart\\Client\\BootCart\\src\\app\\auth\\login\\login.component.ts","C:\\Users\\arjun.jg\\Documents\\GitHub\\BootCart\\Client\\BootCart\\src\\app\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../auth.service';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n\tmessage: string = '';\r\n\tconstructor(private loginService:AuthService, private router:Router,private cookieService: CookieService) { }\r\n\r\n\tcheckLogin(form: NgForm){\r\n\t\tthis.loginService.login(form.value).subscribe({\r\n\t\t\tnext: (res:any) => {\r\n\t\t\t\tif(res.success){\r\n\t\t\t\t\tlocalStorage.setItem('token', res.data);\r\n\t\t\t\t\tvar decodedToken:any = jwt_decode(res.data);\r\n\t\t\t\t\tconsole.log(decodedToken.UserId);\r\n\t\t\t\t\tconsole.log(decodedToken);\r\n\t\t\t\t\tthis.cookieService.set('userid', decodedToken.UserId);\r\n\t\t\t\t\tconsole.log(this.cookieService.get('userid'));\r\n\t\t\t\t\tswitch(decodedToken.Role){\r\n\t\t\t\t\t\tcase \"Admin\":\r\n\t\t\t\t\t\t\tthis.router.navigate([\"/admin\"]);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"Customer\":\r\n\t\t\t\t\t\t\tthis.router.navigate([\"/customer\"]);\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"ProductMaster\":\r\n\t\t\t\t\t\t\tthis.router.navigate([\"/productmaster\"])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror: (err:any) => {\r\n\t\t\t\tthis.message = err.error.message;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","<body >\r\n<div class=\"d-flex\">\r\n<div  class=\"img1\">\r\n    <img src=\"assets/log.jpeg\"width=\"500\" height=\"600\"\r\n      class=\"img-fluid\" alt=\"Sample image\">\r\n  </div>\r\n  \r\n\r\n    <div class=\" box \">\r\n    \r\n        <h1 class=\"text-center \"  style=\"color:#090f2e\" >Login</h1>\r\n        <form #form=\"ngForm\" (ngSubmit)=\"checkLogin(form)\">\r\n            <div class=\"col-sm-10 offset-sm-1\">\r\n                <label for=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" name=\"email\" class=\"form-control\" ngModel #email=\"ngModel\" placeholder=\"me@example.com\" pattern=\"^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$\" required>\r\n                <div class=\"text-danger mt-2\" *ngIf=\"email.errors && email.touched\">\r\n                    <div *ngIf=\"email.errors?.['required']\">Email is required</div>\r\n                    <div *ngIf=\"email.errors?.['pattern']\">Email is invalid</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-10 offset-sm-1 mt-1\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" ngModel #password=\"ngModel\" placeholder=\"Password\" minlength=\"6\" maxlength=\"25\" required>\r\n                <div class=\"text-danger mt-2\" *ngIf=\"password.errors && password.touched\">\r\n                    <div *ngIf=\"password.errors?.['required']\">Password is required</div>\r\n                    <div *ngIf=\"password.errors?.['minlength']\">Password must be at least 6 characters</div>\r\n                    <div *ngIf=\"password.errors?.['maxlength']\">Password must be less than 25 characters</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"mt-4 d-grid col-sm-10 offset-sm-1\">\r\n                <button type=\"submit\" style =\"background-color: #3680e0;\"class=\"btn  \"  [disabled]=\"form.invalid\">Login</button>\r\n            </div>\r\n            <hr class=\"bg-light border-2 border-top \">\r\n\r\n            <div class=\"mt-2 d-flex justify-content-end\">\r\n             <span>Don't have an account</span>   <a routerLink=\"/auth/register\"> Register</a>\r\n            </div>\r\n\r\n            <div class=\"alert alert-info\" *ngIf=\"message\">\r\n                {{ message }}\r\n            </div>\r\n        </form>\r\n  \r\n   \r\n</div>\r\n</div>\r\n    \r\n</body>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}